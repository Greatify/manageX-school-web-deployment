name: ManageX-School-Stage-Deploy

on:
  push:
    branches:
      - stage
  
jobs:  
  build:
    runs-on: ubuntu-latest
    environment: stage
    outputs:
      image: ${{ steps.output_image.outputs.image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: 'Greatify/manageX-school-web'
          ref: 'stage_viewsonic'
          token: ${{ secrets.REPO_DISPATCH_TOKEN }}

      - name: Get commit message
        id: get_commit_message
        run: |
          commit_message=$(git log --format=%B -n 1 ${{ github.sha }} | tr -d '\n')
          sanitized_message=$(echo "$commit_message" | tr -cd '[:alnum:]_-' | tr '[:upper:]' '[:lower:]' | cut -c1-50)
          echo "commit_message=$sanitized_message" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push PHP Laravel image
        id: build-image
        uses: docker/build-push-action@v4
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: stage-managex-school
          IMAGE_TAG: stage-school-${{ steps.get_commit_message.outputs.commit_message }}
        with:
          context: .
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
        
      - name: Output image name
        id: output_image
        run: echo "image=${{ steps.login-ecr.outputs.registry }}/stage-managex-school:stage-school-${{ steps.get_commit_message.outputs.commit_message }}" >> $GITHUB_OUTPUT

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: stage
    steps:
      - name: Checkout deployment repository
        uses: actions/checkout@v3
        with:
          repository: 'Greatify/manageX-school-web-deployment'
          ref: 'stage'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update Kubernetes manifests
        env:
          LARAVEL_IMAGE: ${{ needs.build.outputs.image }}
        run: |
          echo "Updating manifests with image: $LARAVEL_IMAGE"
          yq -i '.spec.template.spec.containers[0].image = strenv(LARAVEL_IMAGE)' deployment/school-stage-deploy.yaml
          yq -i '.spec.jobTemplate.spec.template.spec.containers[0].image = strenv(LARAVEL_IMAGE)' deployment/school-stage-cronjob.yaml
          yq -i '.metadata.annotations."kubernetes.io/change-cause" = "Updated to " + strenv(LARAVEL_IMAGE) + " for commit ${{ github.sha }}"' deployment/school-stage-deploy.yaml
          
          # Verify the changes
          echo "Deployment image:"
          yq '.spec.template.spec.containers[0].image' deployment/school-stage-deploy.yaml
          echo "CronJob image:"
          yq '.spec.jobTemplate.spec.template.spec.containers[0].image' deployment/school-stage-cronjob.yaml

      - name: Print CronJob YAML
        run: cat deployment/school-stage-cronjob.yaml

      - name: Update kube config
        run: aws eks update-kubeconfig --name dev-stg-cluster --region ap-south-1

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f deployment/school-stage-cronjob.yaml -n stage-managex-school
          kubectl apply -f deployment/school-stage-deploy.yaml -n stage-managex-school
          kubectl apply -f deployment/school-stage-ingress.yaml -n stage-managex-school
          kubectl apply -f deployment/school-stage-nginx-configmap.yaml -n stage-managex-school
          kubectl apply -f deployment/school-stage-pod-autoscaler.yaml -n stage-managex-school
          kubectl apply -f deployment/school-stage-secretprovider.yaml -n stage-managex-school
          kubectl apply -f deployment/school-stage-service.yaml -n stage-managex-school

      - name: Wait for deployment to complete
        run: |
          kubectl rollout status deployment/school-stage-deploy -n stage-managex-school

      - name: Push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add deployment/school-stage-deploy.yaml deployment/school-stage-cronjob.yaml
          git commit -m "Update deployment image to ${{ needs.build.outputs.image }}"
          git push origin stage