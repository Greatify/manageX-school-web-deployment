name: ManageX-School-Dev-Deploy
on:
  workflow_dispatch:
    inputs:
      image:
        description: 'Docker image to deploy'
        required: true
      sha:
        description: 'Git SHA of the commit'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kube config
        run: aws eks update-kubeconfig --name dev-stg-cluster --region ap-south-1

      - name: Update deployment files
        run: |
          yq -i '.spec.template.spec.containers[0].image = "${{ github.event.inputs.image }}"' deployment/school-dev-deploy.yaml
          yq -i '.spec.template.metadata.annotations."kubernetes.io/change-cause" = "Update to ${{ github.event.inputs.image }} - SHA: ${{ github.event.inputs.sha }}"' deployment/school-dev-deploy.yaml
          yq -i '.spec.jobTemplate.spec.template.spec.containers[0].image = "${{ github.event.inputs.image }}"' deployment/school-dev-cronjob.yaml

      - name: Apply K8s manifests
        run: |
          kubectl apply -f deployment/school-dev-cronjob.yaml -n dev-managex-school
          kubectl apply -f deployment/school-dev-deploy.yaml -n dev-managex-school
          kubectl apply -f deployment/school-dev-service.yaml -n dev-managex-school
          kubectl apply -f deployment/school-dev-ingress.yaml -n dev-managex-school
          kubectl apply -f deployment/school-dev-secretprovider.yaml -n dev-managex-school

      - name: Push changes
        run: |
          git config --global user.email "github-actions@example.com"
          git config --global user.name "greatify-code-merger"
          git add -f deployment/school-dev-deploy.yaml deployment/school-dev-cronjob.yaml
          git commit -m "Update deployment image to ${{ github.event.inputs.image }}"
          git push

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: Greatify/manageX-school-web
          branch: dev
          base: stage
          title: "Promote Dev to Stage"
          body: |
            This PR promotes the changes from Dev to Stage.
            
            Deployed image: ${{ github.event.inputs.image }}
            Commit SHA: ${{ github.event.inputs.sha }}
          labels: automated-pr, dev-to-stage

      - name: Check if PR was merged
        id: check_pr
        run: |
          PR_STATE=$(gh pr view --repo Greatify/manageX-school-web --json state -q .state)
          if [ "$PR_STATE" == "MERGED" ]; then
            echo "pr_merged=true" >> $GITHUB_OUTPUT
          else
            echo "pr_merged=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger Stage Deploy
        if: steps.check_pr.outputs.pr_merged == 'true'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: ManageX-School-Stage-Deploy
          repo: Greatify/manageX-school-web-deployment
          token: ${{ secrets.REPO_DISPATCH_TOKEN }}
          ref: stage
          inputs: '{"image": "${{ github.event.inputs.image }}", "sha": "${{ github.event.inputs.sha }}"}'

      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: |
            Dev Deployment Completed
            Image: ${{ github.event.inputs.image }}
            Commit SHA: ${{ github.event.inputs.sha }}
            PR Created: Yes
            PR Merged: ${{ steps.check_pr.outputs.pr_merged }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()